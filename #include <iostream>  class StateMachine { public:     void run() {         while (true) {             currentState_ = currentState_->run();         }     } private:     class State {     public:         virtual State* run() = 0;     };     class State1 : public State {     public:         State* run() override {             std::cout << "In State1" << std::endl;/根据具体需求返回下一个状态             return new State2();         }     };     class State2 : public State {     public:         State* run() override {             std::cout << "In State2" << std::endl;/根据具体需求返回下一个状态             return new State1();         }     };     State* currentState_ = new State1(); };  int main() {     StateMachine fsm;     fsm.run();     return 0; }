#include <iostream>

class StateMachine {
public:
    void run() {
        while (true) {
            currentState_ = currentState_->run();
        }
    }
private:
    class State {
    public:
        virtual State* run() = 0;
    };
    class State1 : public State {
    public:
        State* run() override {
            std::cout << "In State1" << std::endl;
            // 根据具体需求返回下一个状态
            return new State2();
        }
    };
    class State2 : public State {
    public:
        State* run() override {
            std::cout << "In State2" << std::endl;
            // 根据具体需求返回下一个状态
            return new State1();
        }
    };
    State* currentState_ = new State1();
};

int main() {
    StateMachine fsm;
    fsm.run();
    return 0;
}
